"""
Django settings for douban project.

Generated by 'django-admin startproject' using Django 2.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

#项目路径
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
#以上代码意思是此文件绝对路径的，上上级别目录
#此文件 据对路径 /Users/zhangzhuoyu 1/homework/Python001-class01/week05/douban/douban/settings.py
# 那么项目路径就是 /Users/zhangzhuoyu 1/homework/Python001-class01/week05/douban


#### 密钥
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5@%u$8)e=3+jfy#yi+58zfyw_0wbmt*err#bguclrvcmw1ncw*'


###调试模式
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True





#### 域名限制
ALLOWED_HOSTS = ['*']




#### 支持哪些app 应用系统
# Application definition

INSTALLED_APPS = [
    #### 内置的后台管理系统
    'django.contrib.admin',
    #### 内置的用户认证系统
    'django.contrib.auth',
    ### 所有model的元数据
    'django.contrib.contenttypes',
    #### 会话，表示当前访问网站的用户身份
    'django.contrib.sessions',
    #### 消息提示
    'django.contrib.messages',
    ### 静态资源路径
    'django.contrib.staticfiles',

    ### 注册自己的app
    'film',
]

### 中间件  从上到下读取运行，从下到上返回
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#### URL匹配，从这里开始
ROOT_URLCONF = 'douban.urls'



TEMPLATES = [
    {    #### 定义模版引擎
        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        #### 设置模版路径
        'DIRS': [],
        #### 是否在App 里面找模版文件
        'APP_DIRS': True,

        #### 用于 RequestContext 上下文的调用函数
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


#### 网关借口配置
WSGI_APPLICATION = 'douban.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases



# export PATH=$PATH:/usr/local/mysql/bin
# OSError: mysql_config not found
# pip install mysqlclient
# pip install pymysql
##### 指定数据库  （可以配置多个）

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME':'python',
        'USER':'root',
        'PASSWORD':'195917aa',
        'HOST':'127.0.0.1',
        'PORT':'3306',
    }
    # 生产环境有可能连接第二个数据库
    # 'db2': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'mydatabase',
    #     'USER': 'mydatabaseuser',
    #     'PASSWORD': 'mypassword',
    #     'HOST': '127.0.0.1',
    #     'PORT': '3307',
    # }


}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators



#### 密码验证功能
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



#### 语言和时区
# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'utc'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/


#### 静态文件放置的地方（css.image，js等等）
STATIC_URL = '/static/'
